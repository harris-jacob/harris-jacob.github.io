{"version":3,"sources":["Tabs.tsx","resources/resume.pdf","Socials.tsx","Menu.tsx","resources/me.jpg","About.tsx","index.tsx"],"names":["StyledTabs","withStyles","indicator","display","justifyContent","backgroundColor","paddingTop","maxWidth","width","props","Tabs","TabIndicatorProps","children","className","StyledTab","theme","root","textTransform","color","opacity","minWidth","Tab","disableRipple","Socials","logos","key","component","href","transitions","useTransition","item","unique","trail","from","transform","enter","leave","map","i","console","log","div","style","child","SpringyLogo","makeCalc","x","y","window","innerWidth","useSpring","xys","config","mass","tension","friction","springProps","set","onMouseMove","clientX","clientY","onMouseLeave","interpolate","s","Menu","change","index","textTransitions","position","menuProps","Pdf","value","onChange","e","newValue","v","label","About","midRef","useRef","midTransition","ref","overflowX","picRef","picTransition","bottomRef","bottomTransition","useChain","alt","src","me","onClick","Content","React","useState","page","setPage","changePageHandler","scrollTo","top","getPosition","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca542f75.chunk.js","sourcesContent":["import { Tab, TabProps, Tabs, withStyles } from '@material-ui/core';\nimport React from 'react';\n\ninterface StyledTabsProps {\n    value: number;\n    onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\n}\n\nexport const StyledTabs = withStyles({\n    indicator: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        paddingTop: 0,\n        '& > span': {\n            maxWidth: 40,\n            width: '100%',\n            backgroundColor: '#b06873'\n        }\n    }\n})((props: StyledTabsProps) => (\n    <Tabs\n        {...props}\n        TabIndicatorProps={{ children: <span className=\"here\" /> }}\n    />\n));\n\nexport const StyledTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        color: 'inherit',\n        '&:focus': {\n            opacity: 1\n        },\n        minWidth: 'auto'\n    }\n}))((props: TabProps) => <Tab disableRipple {...props} />);\n","export default __webpack_public_path__ + \"static/media/resume.e58068fb.pdf\";","import {\n    GithubWithCircle,\n    LinkedinWithCircle,\n    MailWithCircle,\n    TwitterWithCircle\n} from '@styled-icons/entypo-social';\nimport { animated, useTransition, useSpring, SpringConfig } from 'react-spring';\nimport './Socials.scss';\n\nexport const Socials = (): JSX.Element => {\n    const logos = [\n        {\n            key: 'twitter',\n            component: <TwitterWithCircle />,\n            href: 'https://twitter.com/jacobsamharris'\n        },\n        {\n            key: 'linkedin',\n            component: <LinkedinWithCircle />,\n            href: 'https://www.linkedin.com/in/jacob-harris-42bb8a190'\n        },\n        {\n            key: 'github',\n            component: <GithubWithCircle />,\n            href: 'https://github.com/harris-jacob'\n        },\n        {\n            key: 'mail',\n            component: <MailWithCircle />,\n            href: 'mailto:jacob.harris443@gmail.com'\n        }\n    ];\n\n    const transitions = useTransition(logos, (item) => item.key, {\n        unique: true,\n        trail: 100,\n        from: { opacity: 0, transform: 'scale(0)' },\n        enter: { opacity: 1, transform: 'scale(1)' },\n        leave: { opacity: 0, transform: 'scale(0)' }\n    });\n\n    return (\n        <div className=\"socials\">\n            {transitions.map(({ item, key, props }, i) => {\n                console.log(item);\n                return (\n                    <animated.div key={key} style={props}>\n                        <SpringyLogo\n                            href={item.href}\n                            i={i}\n                            child={item.component}\n                        />\n                    </animated.div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport const SpringyLogo = ({\n    child,\n    i,\n    href\n}: {\n    child: JSX.Element;\n    i: number;\n    href: string;\n}): JSX.Element => {\n    const makeCalc = (i: number) => (x: number, y: number) => {\n        return [\n            0,\n            (x - window.innerWidth / 2 + (50 + 100 * (1 - i))) * 0.4,\n            1.1\n        ];\n    };\n    const trans = (x: number, y: number, s: number) =>\n        `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\n    const [springProps, set] = useSpring<{\n        xys: number[];\n        config: SpringConfig;\n    }>(() => ({\n        xys: [0, 0, 1],\n        config: { mass: 5, tension: 350, friction: 40 }\n    }));\n\n    return (\n        <animated.div\n            onMouseMove={({ clientX: x, clientY: y }) =>\n                set({ xys: makeCalc(i)(x, y) })\n            }\n            onMouseLeave={() => set({ xys: [0, 0, 1] })}\n            style={{\n                // @ts-ignore\n                transform: springProps.xys.interpolate(trans)\n            }}\n        >\n            <a href={href}>{child}</a>\n        </animated.div>\n    );\n};\n","import React from 'react';\nimport { animated, useSpring, useTransition } from 'react-spring';\nimport './Menu.scss';\nimport { StyledTab, StyledTabs } from './Tabs';\n\n// @ts-ignore\nimport Pdf from './resources/resume.pdf';\nimport { Socials } from './Socials';\n\nexport interface MenuProps {\n    change: (key: number) => void;\n    index: number;\n}\n\nexport const Menu = (props: MenuProps): JSX.Element => {\n    const { change, index } = props;\n    const textTransitions = useTransition(index === 0, null, {\n        from: {\n            opacity: 0,\n            transform: 'translate3d(0,-40px,0)',\n            position: 'absolute'\n        },\n        enter: {\n            opacity: 1,\n            transform: 'translate3d(0, 9px,0)'\n        },\n        leave: { opacity: 0, transform: 'translate3d(0,0px,0)' }\n    });\n\n    const updateHandler = (\n        e: React.ChangeEvent<{}>,\n        newValue: number\n    ): void => {\n        change(newValue);\n    };\n\n    const menuProps = useSpring({\n        transform:\n            index === 0 ? 'translate3d(0, 0px, 0)' : 'translate3d(0, -10px, 0)'\n    });\n\n    return (\n        <div className=\"menu\">\n            <span className=\"title\">Jacob Harris</span>\n            {textTransitions.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <animated.div key={key} style={props}>\n                            <span className=\"email\">\n                                jacob.harris443@gmail.com |{' '}\n                                <a href={Pdf}>resume</a>{' '}\n                            </span>\n                        </animated.div>\n                    )\n            )}\n            <animated.div style={menuProps}>\n                <StyledTabs value={index} onChange={updateHandler}>\n                    {['home', 'about', 'socials'].map((v, i) => (\n                        <StyledTab key={i} label={v} />\n                    ))}\n                </StyledTabs>\n            </animated.div>\n                            {index === 2 && <Socials />}\n        </div>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/me.5351c887.jpg\";","import React, { useRef } from 'react';\nimport {\n    animated,\n    ReactSpringHook,\n    useChain,\n    useTransition\n} from 'react-spring';\nimport './About.scss';\nimport me from './resources/me.jpg';\nexport const About = ({\n    change\n}: {\n    change: (key: number) => void;\n}): JSX.Element => {\n    // page transitions\n    const midRef = useRef<ReactSpringHook>(null);\n    const midTransition = useTransition(true, null, {\n        ref: midRef,\n        from: {\n            opacity: 0,\n            transform: 'translate(0px, 500px)',\n            overflowX: 'hidden'\n        },\n        enter: {\n            opacity: 1,\n            transform: 'translate(0px, 0px)'\n        }\n    });\n\n    const picRef = useRef<ReactSpringHook>(null);\n    const picTransition = useTransition(true, null, {\n        ref: picRef,\n        from: {\n            opacity: 0,\n            transform: 'perspective(600px) rotateY(-90deg)'\n        },\n        enter: {\n            opacity: 1,\n            transform: 'perspective(600px) rotateY(0deg)'\n        }\n    });\n\n    const bottomRef = useRef<ReactSpringHook>(null);\n    const bottomTransition = useTransition(true, null, {\n        ref: bottomRef,\n        from: {\n            opacity: 0\n        },\n        enter: {\n            opacity: 1\n        }\n    });\n\n    useChain([picRef, midRef, bottomRef], [0, 0.5, 0.5]);\n\n    return (\n        <div className=\"about\">\n            <div className=\"top\">\n                {picTransition.map(\n                    ({ item, key, props }) =>\n                        item && (\n                            <animated.div\n                                className=\"pic-anim\"\n                                key={key}\n                                style={props}\n                            >\n                                <div className=\"image\">\n                                    <img alt=\"Jacob Harris\" src={me} />\n                                </div>\n                            </animated.div>\n                        )\n                )}\n                <div className=\"text\">\n                    <span className=\"title-text\">\n                        Hello I’m Jacob, a software developer and engineer from\n                        Wales, United Kingdom. Currently at{' '}\n                        <a href=\"https://www.autodesk.com/\">Autodesk</a>.\n                    </span>\n                    <span className=\"body-text\">\n                        <p>\n                            A mechanical engineer by training, but converted to\n                            the cult of software. That being said, I still like\n                            solving problems in the mechanical domain.{' '}\n                        </p>\n\n                        <p>\n                            I find myself designing web apps a lot, and I enjoy\n                            thinking about user experience. But, I don’t like\n                            being confined to the frontend; I like working in a\n                            variety of languages and tinkering with many pieces\n                            of the architectural puzzle.\n                        </p>\n                        <p>\n                            At Autodesk, I work in the Birmingham Technology\n                            Center, developing research prototypes for\n                            Autodesk’s make platform.\n                        </p>\n                    </span>\n                </div>\n            </div>\n\n            {midTransition.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <animated.div key={key} style={props}>\n                            <div className=\"middle\">\n                                <div className=\"text\">\n                                    <p className=\"title-text\">\n                                        Research & Project Interests\n                                    </p>\n                                    <p className=\"body-text\">\n                                        At Autodesk, most of my projects relate\n                                        to the democratization of manufacturing.\n                                        This could be building experience based\n                                        recommender systems to suggest process\n                                        parameters to users, or using data from\n                                        our{' '}\n                                        <a href=\"https://en.wikipedia.org/wiki/Numerical_control\">\n                                            NC machines\n                                        </a>{' '}\n                                        in Birmingham to build better models of\n                                        manufacturing processes.\n                                    </p>\n                                    <p className=\"body-text\">\n                                        Outside of work, I am working on a{' '}\n                                        <a href=\"http://spatial.link\">\n                                            simulation platform\n                                        </a>\n                                        . We are interested in combining modern,\n                                        continuum based simulation techniques\n                                        with resilient, scalable cloud compute.\n                                        I also have a soft spot for\n                                        Reinforcement Learning.\n                                    </p>\n                                </div>\n                            </div>\n                        </animated.div>\n                    )\n            )}\n            {bottomTransition.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <animated.div key={key} style={props}>\n                            <div className=\"bottom\">\n                                <div className=\"text\">\n                                    <h1 className=\"title-text\">\n                                        Looking for collaborators?\n                                    </h1>\n                                    <p className=\"body-text\">\n                                        If you have a cool project and need some\n                                        help.{' '}\n                                        <button onClick={() => change(2)}>\n                                            Get in touch\n                                        </button>{' '}\n                                        and I may be of assistance 😃\n                                    </p>\n                                </div>\n                            </div>\n                        </animated.div>\n                    )\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Menu } from './Menu';\nimport { useSpring, animated, useTransition } from 'react-spring';\nimport { About } from './About';\n\nconst Content = () => {\n    const [page, setPage] = React.useState<number>(0);\n    const changePageHandler = (key: number) => {\n        window.scrollTo(0, 0);\n        setPage(key);\n    };\n\n    const getPosition = () => {\n        switch (page) {\n            case 1:\n                return '0';\n            case 2:\n                return '30vh';\n            default:\n                return '50vh';\n        }\n    };\n\n    // Menu motion\n    const menuProps = useSpring({\n        position: 'relative',\n        top: getPosition(),\n        transform: page === 0 ? 'translate(0%, -50%)' : 'translate(0%, 0%) '\n    });\n\n    // Page transitions\n    const transitions = useTransition(page === 1, null, {\n        from: {\n            opacity: 0,\n            transform: 'translate(0px, 500px)',\n            position: 'relative',\n            width: '100%'\n        },\n        enter: {\n            opacity: 1,\n            position: 'relative',\n            transform: 'translate(0px, 0px)'\n        },\n        leave: { opacity: 0, transform: 'translate(0px, 500px)' }\n    });\n\n    return (\n        <div className=\"content\">\n            <animated.div style={menuProps}>\n                <Menu index={page} change={changePageHandler} />{' '}\n            </animated.div>\n            {transitions.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <animated.div key={key} style={props}>\n                            <About change={changePageHandler} />\n                        </animated.div>\n                    )\n            )}\n        </div>\n    );\n};\n\nReactDOM.render(\n    <React.StrictMode>\n        <Content />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}